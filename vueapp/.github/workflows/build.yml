name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]
        node-version: [18]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Set up Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install system-specific dependencies
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 gir1.2-webkit2-4.1

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install create-dmg

      # Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> $GITHUB_ENV

      # Install Python dependencies using Poetry
      - name: Install Python dependencies with Poetry
        run: poetry install
        env:
          PATH: ${{ env.PATH }}

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: |
          cd app
          if [ -f package.json ]; then npm install; fi

      # Run tests
      - name: Run Python and Node.js tests
        run: |
          # Python tests
          if [ -f pytest.ini ] || [ -f pyproject.toml ]; then poetry run pytest; fi

          # Node.js tests
          if [ -f package.json ]; then npm test; fi
